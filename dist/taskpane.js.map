{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Excel Add-In für Musicworks PowerPoint-Generator\n */\n\n// Office-Initialisierung beim Laden des Add-Ins\nOffice.initialize = function (reason) {\n    // Wird aufgerufen, wenn das Add-In geladen wird\n    $(document).ready(function () {\n        // Event-Handler für den Server-Button\n        $('#serverButton').click(sendDataToServer);\n        \n        // Statusmeldung anzeigen\n        showStatus(\"Add-In geladen und bereit.\");\n    });\n};\n\n/**\n * Liest Daten aus Excel und sendet sie an den Server\n */\nfunction sendDataToServer() {\n    showStatus(\"Lese Daten aus Excel...\", \"normal\");\n    \n    // Excel.run verwenden, um auf das Workbook zuzugreifen\n    Excel.run(function (context) {\n        // Das aktive Arbeitsblatt finden\n        var activeSheet = context.workbook.worksheets.getActiveWorksheet();\n        activeSheet.load(\"name\");\n        \n        // Ausführen und Namen des aktiven Arbeitsblatts bekommen\n        return context.sync()\n            .then(function () {\n                // Den Namen des aktiven Arbeitsblatts bekommen\n                var activeSheetName = activeSheet.name;\n                console.log(\"Aktives Arbeitsblatt:\", activeSheetName);\n                \n                // Format aus dem aktiven Arbeitsblatt bestimmen\n                var wsFormat = activeSheetName.toLowerCase();\n                \n                // Eine Liste aller Funktionsbezeichnungen\n                const functionNames = [\n                    \"pax\", \"time\", \"mainroom\", \"sideroom1\", \"sideroom2\", \"sideroom3\", \n                    \"sideroom4\", \"sideroom5\", \"sideroom6\", \"sideroom7\", \"sideroom8\", \n                    \"chairs\", \"setup\", \"setdown\", \"manager\", \"pa\", \n                    \"extra1\", \"extra2\", \"extra3\", \"extra4\", \"extra5\", \n                    \"extraclick1\", \"extraclick2\", \"extraclick3\", \"extraclick4\", \"extraclick5\"\n                ];\n                \n                // Checkboxen-Namen für spätere Verarbeitung\n                const checkboxNames = [\"pa\", \"extraclick1\", \"extraclick2\", \"extraclick3\", \"extraclick4\", \"extraclick5\"];\n                \n                // Funktionen zum Laden der benannten Bereiche und Checkboxen\n                var namedItems = context.workbook.names;\n                namedItems.load(\"items/name, items/type\");\n                \n                // Daten für die API vorbereiten\n                var data = {\n                    ws_format: wsFormat,  // Format aus dem aktiven Arbeitsblatt\n                    format: \"both\"        // Standardwert für Export-Format\n                };\n                \n                // Vorinitialisieren aller Funktionsnamen mit null\n                functionNames.forEach(function(fnName) {\n                    data[fnName] = null;\n                });\n                \n                return context.sync().then(function() {\n                    // Alle erkannten Namen und ihre Typen anzeigen\n                    console.log(\"Gefundene benannte Bereiche:\", namedItems.items.map(item => ({\n                        name: item.name,\n                        type: item.type\n                    })));\n                    \n                    // Zum Sammeln aller Bereiche, die wir laden wollen\n                    var namesToProcess = [];\n                    \n                    // Für jede Funktionsbezeichnung prüfen\n                    for (var fnIndex = 0; fnIndex < functionNames.length; fnIndex++) {\n                        var fnName = functionNames[fnIndex];\n                        var fullName = wsFormat + \"_\" + fnName;\n                        \n                        // Prüfen, ob es einen benannten Bereich mit diesem Namen gibt\n                        for (var niIndex = 0; niIndex < namedItems.items.length; niIndex++) {\n                            if (namedItems.items[niIndex].name.toLowerCase() === fullName) {\n                                namesToProcess.push({\n                                    name: namedItems.items[niIndex].name,\n                                    functionName: fnName,\n                                    isCheckbox: checkboxNames.includes(fnName)\n                                });\n                                break;\n                            }\n                        }\n                    }\n                    \n                    console.log(\"Zu verarbeitende benannte Bereiche:\", namesToProcess);\n                    \n                    // Jetzt verarbeiten wir die gefundenen Namen nacheinander\n                    return processNamedItems(context, namesToProcess, data, 0);\n                });\n            })\n            .then(function(processedData) {\n                console.log(\"Gesammelte Daten:\", processedData);\n                \n                // Status aktualisieren\n                showStatus(\"Daten erfolgreich ausgelesen. Bereite Präsentation vor...\", \"normal\");\n                \n                // API-URL\n                const apiUrl = 'https://musicworksnas.synology.me:5049/api/concept';\n                \n                // Explizite String-Konvertierung für numerische Werte\n                var requestData = {\n                    ws_format: processedData.ws_format,\n                    format: processedData.format\n                };\n                \n                // Für alle anderen Felder: Checkbox-Werte als Boolean, alles andere als String\n                const checkboxNames = [\"pa\", \"extraclick1\", \"extraclick2\", \"extraclick3\", \"extraclick4\", \"extraclick5\"];\n                \n                Object.keys(processedData).forEach(function(key) {\n                    // format und ws_format wurden bereits behandelt\n                    if (key !== 'format' && key !== 'ws_format') {\n                        if (processedData[key] !== null && processedData[key] !== undefined) {\n                            if (checkboxNames.includes(key)) {\n                                // Checkbox-Werte als Boolean behalten\n                                requestData[key] = processedData[key];\n                            } else {\n                                // Alle anderen Werte explizit zu Strings konvertieren\n                                requestData[key] = String(processedData[key]);\n                            }\n                        } else {\n                            requestData[key] = null;\n                        }\n                    }\n                });\n                \n                console.log(\"Daten, die an die API gesendet werden:\", requestData);\n                \n                // Daten an den Server senden\n                return fetch(apiUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(requestData)\n                })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Netzwerkfehler: ' + response.status);\n                    }\n                    \n                    // Prüfen, ob die Antwort JSON oder eine Datei ist\n                    const contentType = response.headers.get('content-type');\n                    if (contentType && contentType.includes('application/json')) {\n                        return response.json().then(data => {\n                            return { type: 'json', data: data };\n                        });\n                    } else {\n                        return response.blob().then(blob => {\n                            return { type: 'blob', data: blob };\n                        });\n                    }\n                })\n                .then(result => {\n                    if (result.type === 'json') {\n                        // JSON-Antwort mit Links zu beiden Dateien\n                        const data = result.data;\n                        \n                        // Download-Links für beide Dateien erstellen\n                        const serverUrl = new URL(apiUrl).origin; // Basis-URL des Servers\n                        const pptxUrl = serverUrl + data.pptx_url;\n                        const pdfUrl = serverUrl + data.pdf_url;\n                        \n                        console.log(\"Download-URLs:\", { pptx: pptxUrl, pdf: pdfUrl });\n                        \n                        // Download-Links im UI anzeigen\n                        createDownloadLinks(pptxUrl, pdfUrl);\n                        \n                        showStatus(\"Dateien bereit zum Download.\", \"success\");\n                    } else {\n                        // Direkter Blob-Download (einzelne Datei)\n                        const blob = result.data;\n                        const filename = getFilenameFromContentType(\n                            blob.type, \n                            response.headers.get('content-disposition')\n                        );\n                        \n                        // Download-Link erstellen\n                        const url = URL.createObjectURL(blob);\n                        createSingleDownloadLink(url, filename);\n                        \n                        showStatus(\"Datei bereit zum Download.\", \"success\");\n                    }\n                });\n            })\n            .catch(error => {\n                showStatus(\"Fehler bei der Verarbeitung: \" + error.message, \"error\");\n                console.error('Fehler:', error);\n            });\n    });\n}\n\n/**\n * Verarbeitet benannte Bereiche nacheinander, um Sync-Fehler zu vermeiden\n */\nfunction processNamedItems(context, itemList, data, index) {\n    // Wenn alle Items verarbeitet wurden, geben wir die Daten zurück\n    if (index >= itemList.length) {\n        return data;\n    }\n    \n    var item = itemList[index];\n    var namedRange;\n    \n    try {\n        namedRange = context.workbook.names.getItem(item.name);\n        var range = namedRange.getRange();\n        range.load(\"values\");\n        \n        return context.sync()\n            .then(function() {\n                try {\n                    var value = range.values[0][0];\n                    if (value !== null && value !== undefined) {\n                        if (item.isCheckbox) {\n                            // Checkbox-Werte als Boolean\n                            value = value === true || value === \"ja\" || value === \"yes\" || value === 1;\n                        }\n                        \n                        // Wert direkt unter dem Funktionsnamen speichern\n                        data[item.functionName] = value;\n                        console.log(`Wert für ${item.functionName} gefunden:`, value);\n                    }\n                } catch (valueError) {\n                    console.error(`Fehler beim Lesen des Werts für ${item.name}:`, valueError);\n                }\n                \n                // Nächstes Item verarbeiten\n                return processNamedItems(context, itemList, data, index + 1);\n            });\n    } catch (rangeError) {\n        console.error(`Fehler beim Laden des Bereichs für ${item.name}:`, rangeError);\n        \n        // Trotz Fehler zum nächsten Item weitergehen\n        return processNamedItems(context, itemList, data, index + 1);\n    }\n}\n\n/**\n * Liefert Testdaten für die API-Anfrage\n */\nfunction getTestData() {\n    return {\n        ws_format: \"dgbdw\",        // Workshop-Format\n        pax: \"80\",                  // Teilnehmerzahl\n        time: \"4 Stunden\",          // Zeitrahmen\n        mainroom: \"150\",            // Hauptraum (m²)\n        sideroom1: \"45\",            // Seitenraum 1 (m²)\n        sideroom2: \"45\",            // Seitenraum 2 (m²)\n        sideroom3: \"20\",            // Seitenraum 3 (m²)\n        chairs: \"90\",               // Stühle\n        setup: \"90\",                // Aufbauzeit (min)\n        setdown: \"30\",              // Abbauzeit (min)\n        manager: \"JR\",              // Manager (JR, JS, RG, IS, Allgemein)\n        pa: true,                   // PA benötigt\n        extra1: \"Testdaten\",        // Extra Feld 1\n        extra2: \"Beispiel\",         // Extra Feld 2\n        extraclick1: true,          // Extra Checkbox 1\n        format: \"both\"              // Beide Dateiformate anfordern\n    };\n}\n\n/**\n * Erstellt Download-Links für PPTX und PDF\n */\nfunction createDownloadLinks(pptxUrl, pdfUrl) {\n    // Container für Download-Links finden oder erstellen\n    var downloadContainer = document.getElementById('downloadContainer');\n    \n    // Container leeren\n    downloadContainer.innerHTML = '';\n    \n    // PPTX-Link erstellen\n    var pptxLink = document.createElement('a');\n    pptxLink.href = pptxUrl;\n    pptxLink.className = 'download-button pptx-button';\n    pptxLink.textContent = 'PowerPoint Download';\n    pptxLink.download = 'praesentation.pptx';\n    \n    // PDF-Link erstellen\n    var pdfLink = document.createElement('a');\n    pdfLink.href = pdfUrl;\n    pdfLink.className = 'download-button pdf-button';\n    pdfLink.textContent = 'PDF Download';\n    pdfLink.download = 'praesentation.pdf';\n    \n    // Info-Text\n    var infoText = document.createElement('p');\n    infoText.className = 'download-info';\n    infoText.textContent = 'Klicke mit Rechtsklick auf die Buttons und wähle \"Link speichern unter\" um die Dateien herunterzuladen.';\n    \n    // Links zum Container hinzufügen\n    downloadContainer.appendChild(pptxLink);\n    downloadContainer.appendChild(pdfLink);\n    downloadContainer.appendChild(infoText);\n    \n    // Container sichtbar machen\n    downloadContainer.style.display = 'block';\n}\n\n/**\n * Erstellt einen einzelnen Download-Link\n */\nfunction createSingleDownloadLink(url, filename) {\n    // Container für Download-Links finden oder erstellen\n    var downloadContainer = document.getElementById('downloadContainer');\n    \n    // Container leeren\n    downloadContainer.innerHTML = '';\n    \n    // Download-Link erstellen\n    var downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.className = 'download-button';\n    \n    // Button-Klasse basierend auf Dateityp setzen\n    if (filename.endsWith('.pptx')) {\n        downloadLink.className += ' pptx-button';\n        downloadLink.textContent = 'PowerPoint-Präsentation herunterladen';\n    } else if (filename.endsWith('.pdf')) {\n        downloadLink.className += ' pdf-button';\n        downloadLink.textContent = 'PDF-Version herunterladen';\n    } else {\n        downloadLink.textContent = 'Datei herunterladen';\n    }\n    \n    downloadLink.download = filename;\n    \n    // Info-Text\n    var infoText = document.createElement('p');\n    infoText.className = 'download-info';\n    infoText.textContent = 'Klicken Sie auf den Button, um die Datei herunterzuladen.';\n    \n    // Link zum Container hinzufügen\n    downloadContainer.appendChild(downloadLink);\n    downloadContainer.appendChild(infoText);\n    \n    // Container sichtbar machen\n    downloadContainer.style.display = 'block';\n}\n\n/**\n * Versucht, den Dateinamen aus dem Content-Type oder Content-Disposition-Header zu extrahieren\n */\nfunction getFilenameFromContentType(contentType, contentDisposition) {\n    let filename = 'praesentation';\n    \n    // Aus Content-Disposition extrahieren, falls vorhanden\n    if (contentDisposition) {\n        const matches = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/.exec(contentDisposition);\n        if (matches && matches[1]) {\n            filename = matches[1].replace(/['\"]/g, '');\n        }\n    }\n    \n    // Erweiterung basierend auf Content-Type hinzufügen\n    if (!filename.includes('.')) {\n        if (contentType.includes('application/vnd.openxmlformats-officedocument.presentationml.presentation')) {\n            filename += '.pptx';\n        } else if (contentType.includes('application/pdf')) {\n            filename += '.pdf';\n        }\n    }\n    \n    return filename;\n}\n\n/**\n * Zeigt eine Statusmeldung im UI an\n * @param {string} message - Die anzuzeigende Nachricht\n * @param {string} type - Der Nachrichtentyp (normal, success, error)\n */\nfunction showStatus(message, type) {\n    var statusElement = $('#statusMessage');\n    \n    // Alle Klassen entfernen\n    statusElement.removeClass(\"success error\");\n    \n    // Nachricht setzen\n    statusElement.text(message);\n    \n    // Typ-spezifische Klasse hinzufügen\n    if (type === \"success\") {\n        statusElement.addClass(\"success\");\n    } else if (type === \"error\") {\n        statusElement.addClass(\"error\");\n    }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Musicworks PowerPoint Generator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/excel.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\\\"><\" + \"/script> <style>body{font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;margin:20px;color:#181818}h1{font-size:20px;color:#181818;margin-bottom:15px}button{background-color:#217346;color:#fff;border:none;padding:10px 16px;margin:10px 0;cursor:pointer;border-radius:4px;font-size:14px;width:100%;transition:background-color .2s}button:hover{opacity:.9}#statusMessage{margin-top:20px;padding:10px;background-color:#f0f0f0;border-radius:4px;min-height:20px}.success{background-color:#dff0d8;color:#3c763d}.error{background-color:#f2dede;color:#a94442}.instructions{margin-top:20px;font-size:13px;color:#181818}#downloadContainer{margin-top:20px;margin-bottom:20px;display:none;border:1px solid #ddd;border-radius:4px;padding:15px;background-color:#f9f9f9}.download-button{display:block;color:#fff;padding:12px 16px;margin:10px 0;text-align:center;border-radius:4px;text-decoration:none;font-size:14px;font-weight:700;transition:background-color .2s}.download-button:hover{opacity:.9}.pptx-button{background-color:#c43e1c}.pdf-button{background-color:#c43e1c}.download-info{font-size:12px;color:#181818;margin-top:15px;text-align:center}.divider{margin:20px 0;border-top:1px solid #ddd}</style> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> </head> <body> <h1>Konzept Erstellung</h1> <p>Klicke auf den Button, um eine PowerPoint- und PDF-Datei zu erhalten. Der Vorgang kann ein paar Minuten benötigen.</p> <button id=\\\"serverButton\\\">Konzept erstellen</button> <div id=\\\"statusMessage\\\">Bitte gebe alle nötigen Workshop-Daten ein.</div> <div id=\\\"downloadContainer\\\"> </div> <div class=\\\"divider\\\"></div> <div class=\\\"instructions\\\"> <h2>Anleitung:</h2> <ol> <li>Gebe alle Daten ein</li> <li>Klicke auf \\\"Konzept erstellen\\\"</li> <li>Warte 1-2 Minuten bis die Download-Buttons erscheinen</li> <li>Klicke mit Rechtsklick auf die Buttons und wähle \\\"Link speichern unter\\\" aus</li> <li>Wähle den gewünschten Speicherort und Namen für die Datei</li> </ol> <p><strong>Hinweis:</strong> Sollte etwas nicht richtig funktionieren wende dich bitte an den Administrator deines Vertrauens.</p> </div> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","sendDataToServer","showStatus","Excel","run","context","activeSheet","workbook","worksheets","getActiveWorksheet","load","sync","then","activeSheetName","name","console","log","wsFormat","toLowerCase","functionNames","checkboxNames","namedItems","names","data","ws_format","format","forEach","fnName","items","map","item","type","namesToProcess","fnIndex","fullName","niIndex","push","functionName","isCheckbox","includes","processNamedItems","processedData","apiUrl","requestData","keys","key","String","fetch","method","headers","body","JSON","stringify","response","ok","status","contentType","get","json","blob","result","serverUrl","URL","origin","pptxUrl","pptx_url","pdfUrl","pdf_url","pptx","pdf","downloadContainer","getElementById","innerHTML","pptxLink","createElement","className","textContent","download","pdfLink","infoText","appendChild","style","display","createDownloadLinks","filename","contentDisposition","matches","exec","getFilenameFromContentType","url","downloadLink","endsWith","createSingleDownloadLink","createObjectURL","catch","error","message","itemList","index","range","getItem","getRange","value","values","concat","valueError","rangeError","statusElement","$","removeClass","text","addClass","Office","initialize","reason","ready","click"],"sourceRoot":""}